"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DebatePool__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_usdcToken",
                type: "address",
            },
            {
                internalType: "address",
                name: "_oracle",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "ECDSAInvalidSignature",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "length",
                type: "uint256",
            },
        ],
        name: "ECDSAInvalidSignatureLength",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
            },
        ],
        name: "ECDSAInvalidSignatureS",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidShortString",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        name: "OwnableInvalidOwner",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "OwnableUnauthorizedAccount",
        type: "error",
    },
    {
        inputs: [],
        name: "ReentrancyGuardReentrantCall",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "str",
                type: "string",
            },
        ],
        name: "StringTooLong",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "debateId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "string",
                name: "topic",
                type: "string",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
            },
        ],
        name: "DebateCreated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [],
        name: "EIP712DomainChanged",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "FundsWithdrawn",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "debateId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "participant",
                type: "address",
            },
        ],
        name: "ParticipantJoined",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "debateId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "winner",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "prize",
                type: "uint256",
            },
        ],
        name: "WinnerDeclared",
        type: "event",
    },
    {
        inputs: [],
        name: "BASIS_POINTS",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "PLATFORM_FEE_PERCENTAGE",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "topic",
                type: "string",
            },
            {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "maxParticipants",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "duration",
                type: "uint256",
            },
        ],
        name: "createDebate",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "debates",
        outputs: [
            {
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
            {
                internalType: "string",
                name: "topic",
                type: "string",
            },
            {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "maxParticipants",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "startTime",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "winner",
                type: "address",
            },
            {
                internalType: "bool",
                name: "isActive",
                type: "bool",
            },
            {
                internalType: "bool",
                name: "isCompleted",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "debateId",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "winner",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "timestamp",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes",
                    },
                ],
                internalType: "struct IDebatePool.WinnerResult",
                name: "result",
                type: "tuple",
            },
        ],
        name: "declareWinner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "eip712Domain",
        outputs: [
            {
                internalType: "bytes1",
                name: "fields",
                type: "bytes1",
            },
            {
                internalType: "string",
                name: "name",
                type: "string",
            },
            {
                internalType: "string",
                name: "version",
                type: "string",
            },
            {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "verifyingContract",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "salt",
                type: "bytes32",
            },
            {
                internalType: "uint256[]",
                name: "extensions",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getActiveDebates",
        outputs: [
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getContractBalance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "debateId",
                type: "uint256",
            },
        ],
        name: "getDebate",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "id",
                        type: "uint256",
                    },
                    {
                        internalType: "string",
                        name: "topic",
                        type: "string",
                    },
                    {
                        internalType: "uint256",
                        name: "entryFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "maxParticipants",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "startTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "endTime",
                        type: "uint256",
                    },
                    {
                        internalType: "address[]",
                        name: "participants",
                        type: "address[]",
                    },
                    {
                        internalType: "address",
                        name: "winner",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "isActive",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "isCompleted",
                        type: "bool",
                    },
                ],
                internalType: "struct IDebatePool.Debate",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "user",
                type: "address",
            },
        ],
        name: "getUserDebates",
        outputs: [
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "debateId",
                type: "uint256",
            },
        ],
        name: "joinDebate",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "nextDebateId",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "oracle",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "usdcToken",
        outputs: [
            {
                internalType: "contract IERC20",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "userDebates",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "withdrawFunds",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x6101a060405260016004553480156200001757600080fd5b5060405162002ab338038062002ab38339810160408190526200003a9162000324565b604080518082018252600a815269111958985d19541bdbdb60b21b60208083019190915282518084019093526001808452603160f81b91840191909152600055903380620000a357604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000ae8162000239565b50620000bc8260026200028b565b61012052620000cd8160036200028b565b61014052815160208084019190912060e052815190820120610100524660a0526200015b60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c0526001600160a01b038216620001bc5760405162461bcd60e51b815260206004820181905260248201527f446562617465506f6f6c3a20496e76616c69642055534443206164647265737360448201526064016200009a565b6001600160a01b0381166200021f5760405162461bcd60e51b815260206004820152602260248201527f446562617465506f6f6c3a20496e76616c6964206f7261636c65206164647265604482015261737360f01b60648201526084016200009a565b6001600160a01b0391821661016052166101805262000542565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602083511015620002ab57620002a383620002c4565b9050620002be565b81620002b8848262000401565b5060ff90505b92915050565b600080829050601f81511115620002f2578260405163305a27a960e01b81526004016200009a9190620004cd565b8051620002ff826200051d565b179392505050565b80516001600160a01b03811681146200031f57600080fd5b919050565b600080604083850312156200033857600080fd5b620003438362000307565b9150620003536020840162000307565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200038757607f821691505b602082108103620003a857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003fc57600081815260208120601f850160051c81016020861015620003d75750805b601f850160051c820191505b81811015620003f857828155600101620003e3565b5050505b505050565b81516001600160401b038111156200041d576200041d6200035c565b62000435816200042e845462000372565b84620003ae565b602080601f8311600181146200046d5760008415620004545750858301515b600019600386901b1c1916600185901b178555620003f8565b600085815260208120601f198616915b828110156200049e578886015182559484019460019091019084016200047d565b5085821015620004bd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083528351808285015260005b81811015620004fc57858101830151858201604001528201620004de565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620003a85760001960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161016051610180516124d6620005dd60003960008181610216015261185701526000818161012b0152818161031f015281816103eb01528181610982015281816110f8015261149d015260006116910152600061166401526000611aaf01526000611a87015260006119e201526000611a0c01526000611a3601526124d66000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063dae1a47211610071578063dae1a47214610284578063e1f1c4a71461028c578063f0f5883614610295578063f2fde38b146102a8578063f5d8e5d9146102bb57600080fd5b8063715018a6146102095780637dc0d1d01461021157806384b0196e146102385780638da5cb5b1461025357806398d336af1461026457600080fd5b806336195513116100f4578063361955131461019d57806359758fcf146101a65780635abead8a146101ce5780636f9fb98a146101e1578063704115ad146101e957600080fd5b806311eac85514610126578063155482321461016a5780631eca95611461018057806324600fc314610193575b600080fd5b61014d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b610172601481565b604051908152602001610161565b61017261018e366004611d93565b6102ce565b61019b6102ff565b005b61017260045481565b6101b96101b4366004611dbd565b610538565b60405161016199989796959493929190611e1c565b6101726101dc366004611f31565b61061b565b61017261096a565b6101fc6101f7366004611f99565b6109fa565b6040516101619190611ff6565b61019b610a66565b61014d7f000000000000000000000000000000000000000000000000000000000000000081565b610240610a7a565b6040516101619796959493929190612009565b6001546001600160a01b031661014d565b610277610272366004611dbd565b610ac0565b60405161016191906120b2565b6101fc610cd7565b61017261271081565b61019b6102a3366004612166565b610e40565b61019b6102b6366004611f99565b61121c565b61019b6102c9366004611dbd565b61125a565b600660205281600052604060002081815481106102ea57600080fd5b90600052602060002001600091509150505481565b6103076115de565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561036e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610392919061220f565b9050600081116103e95760405162461bcd60e51b815260206004820181905260248201527f446562617465506f6f6c3a204e6f2066756e647320746f20776974686472617760448201526064015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb61042a6001546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610477573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049b9190612228565b6104e75760405162461bcd60e51b815260206004820152601d60248201527f446562617465506f6f6c3a205769746864726177616c206661696c656400000060448201526064016103e0565b6001546001600160a01b03166001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d8260405161052d91815260200190565b60405180910390a250565b6005602052600090815260409020805460018201805491929161055a9061224a565b80601f01602080910402602001604051908101604052809291908181526020018280546105869061224a565b80156105d35780601f106105a8576101008083540402835291602001916105d3565b820191906000526020600020905b8154815290600101906020018083116105b657829003601f168201915b50505060028401546003850154600486015460058701546007909701549596929591945092506001600160a01b0381169060ff600160a01b8204811691600160a81b90041689565b60006106256115de565b60008551116106805760405162461bcd60e51b815260206004820152602160248201527f446562617465506f6f6c3a20546f7069632063616e6e6f7420626520656d70746044820152607960f81b60648201526084016103e0565b600084116106e55760405162461bcd60e51b815260206004820152602c60248201527f446562617465506f6f6c3a20456e74727920666565206d75737420626520677260448201526b06561746572207468616e20360a41b60648201526084016103e0565b6001831161074c5760405162461bcd60e51b815260206004820152602e60248201527f446562617465506f6f6c3a204d75737420616c6c6f77206174206c656173742060448201526d32207061727469636970616e747360901b60648201526084016103e0565b600082116107b05760405162461bcd60e51b815260206004820152602b60248201527f446562617465506f6f6c3a204475726174696f6e206d7573742062652067726560448201526a061746572207468616e20360ac1b60648201526084016103e0565b60048054600091826107c183612294565b9091555090504260006107d485836122ad565b9050604051806101400160405280848152602001898152602001888152602001878152602001838152602001828152602001600067ffffffffffffffff81111561082057610820611e7c565b604051908082528060200260200182016040528015610849578160200160208202803683370190505b5081526000602080830182905260016040808501829052606090940183905287835260058252929091208351815590830151909182019061088a908261230f565b5060408201516002820155606082015160038201556080820151600482015560a0820151600582015560c082015180516108ce916006840191602090910190611cfd565b5060e082015160079091018054610100840151610120909401511515600160a81b0260ff60a81b19941515600160a01b026001600160a81b03199092166001600160a01b0390941693909317179290921617905560405183907f6f1ada89a34bf137d8ad7b96784cda535ed20442ace125386c0ab1efe849aa4890610956908b908b906123cf565b60405180910390a250909695505050505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156109d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f5919061220f565b905090565b6001600160a01b038116600090815260066020908152604091829020805483518184028101840190945280845260609392830182828015610a5a57602002820191906000526020600020905b815481526020019060010190808311610a46575b50505050509050919050565b610a6e6115de565b610a78600061160b565b565b600060608060008060006060610a8e61165d565b610a9661168a565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b610b236040518061014001604052806000815260200160608152602001600081526020016000815260200160008152602001600081526020016060815260200160006001600160a01b031681526020016000151581526020016000151581525090565b81600081118015610b35575060045481105b610b515760405162461bcd60e51b81526004016103e0906123f1565b600560008481526020019081526020016000206040518061014001604052908160008201548152602001600182018054610b8a9061224a565b80601f0160208091040260200160405190810160405280929190818152602001828054610bb69061224a565b8015610c035780601f10610bd857610100808354040283529160200191610c03565b820191906000526020600020905b815481529060010190602001808311610be657829003601f168201915b505050505081526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201805480602002602001604051908101604052809291908181526020018280548015610c8d57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c6f575b5050509183525050600791909101546001600160a01b038116602083015260ff600160a01b8204811615156040840152600160a81b90910416151560609091015291505b50919050565b606060006001600454610cea9190612428565b67ffffffffffffffff811115610d0257610d02611e7c565b604051908082528060200260200182016040528015610d2b578160200160208202803683370190505b509050600060015b600454811015610d9c57600081815260056020526040902060070154600160a01b900460ff1615610d8a5780838381518110610d7157610d7161243b565b602090810291909101015281610d8681612294565b9250505b80610d9481612294565b915050610d33565b5060008167ffffffffffffffff811115610db857610db8611e7c565b604051908082528060200260200182016040528015610de1578160200160208202803683370190505b50905060005b82811015610e3857838181518110610e0157610e0161243b565b6020026020010151828281518110610e1b57610e1b61243b565b602090810291909101015280610e3081612294565b915050610de7565b509392505050565b80518015801590610e52575060045481105b610e6e5760405162461bcd60e51b81526004016103e0906123f1565b610e766116b7565b815160009081526005602052604090206007810154600160a01b900460ff16610ee15760405162461bcd60e51b815260206004820181905260248201527f446562617465506f6f6c3a20446562617465206973206e6f742061637469766560448201526064016103e0565b6007810154600160a81b900460ff1615610f495760405162461bcd60e51b815260206004820152602360248201527f446562617465506f6f6c3a2057696e6e657220616c7265616479206465636c616044820152621c995960ea1b60648201526084016103e0565b6006810154610f9a5760405162461bcd60e51b815260206004820152601b60248201527f446562617465506f6f6c3a204e6f207061727469636970616e7473000000000060448201526064016103e0565b610fac836000015184602001516116e1565b6110045760405162461bcd60e51b8152602060048201526024808201527f446562617465506f6f6c3a2057696e6e6572206e6f74206120706172746963696044820152631c185b9d60e21b60648201526084016103e0565b61100d836117b0565b6110595760405162461bcd60e51b815260206004820152601d60248201527f446562617465506f6f6c3a20496e76616c6964207369676e617475726500000060448201526064016103e0565b6006810154600282015460009161106f91612451565b90506000612710611081601484612451565b61108b9190612468565b905060006110998284612428565b60208701516007860180546001600160b01b0319166001600160a01b0390921691909117600160a81b179055905080156111be57602086015160405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015611143573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111679190612228565b6111be5760405162461bcd60e51b815260206004820152602260248201527f446562617465506f6f6c3a2057696e6e6572207472616e73666572206661696c604482015261195960f21b60648201526084016103e0565b85602001516001600160a01b031686600001517f7ed5face07afb2b0e99df53523951350d2a3d4f5d105a0dd2110703efe3995378360405161120291815260200190565b60405180910390a3505050506112186001600055565b5050565b6112246115de565b6001600160a01b03811661124e57604051631e4fbdf760e01b8152600060048201526024016103e0565b6112578161160b565b50565b8060008111801561126c575060045481105b6112885760405162461bcd60e51b81526004016103e0906123f1565b60008281526005602052604090206007810154839190600160a01b900460ff166112f45760405162461bcd60e51b815260206004820181905260248201527f446562617465506f6f6c3a20446562617465206973206e6f742061637469766560448201526064016103e0565b80600401544210156113535760405162461bcd60e51b815260206004820152602260248201527f446562617465506f6f6c3a2044656261746520686173206e6f74207374617274604482015261195960f21b60648201526084016103e0565b80600501544211156113a75760405162461bcd60e51b815260206004820152601c60248201527f446562617465506f6f6c3a204465626174652068617320656e6465640000000060448201526064016103e0565b6113af6116b7565b600084815260056020526040902060038101546006820154106114145760405162461bcd60e51b815260206004820152601a60248201527f446562617465506f6f6c3a204465626174652069732066756c6c00000000000060448201526064016103e0565b61141e85336116e1565b156114755760405162461bcd60e51b815260206004820152602160248201527f446562617465506f6f6c3a20416c72656164792070617274696369706174696e6044820152606760f81b60648201526084016103e0565b60028101546040516323b872dd60e01b815233600482015230602482015260448101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af11580156114ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115129190612228565b61155e5760405162461bcd60e51b815260206004820181905260248201527f446562617465506f6f6c3a2055534443207472616e73666572206661696c656460448201526064016103e0565b60068082018054600181810183556000928352602080842090920180546001600160a01b031916339081179091558084529382526040808420805492830181558452918320018890555187917f7dd8cb04159701bc1976c246434d7d96812782e7489e6c5c34db49a388fe9e8091a3506115d86001600055565b50505050565b6001546001600160a01b03163314610a785760405163118cdaa760e01b81523360048201526024016103e0565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60606109f57f00000000000000000000000000000000000000000000000000000000000000006002611894565b60606109f57f00000000000000000000000000000000000000000000000000000000000000006003611894565b6002600054036116da57604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b60008281526005602090815260408083206006018054825181850281018501909352808352849383018282801561174157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611723575b5050505050905060005b81518110156117a357836001600160a01b03168282815181106117705761177061243b565b60200260200101516001600160a01b031603611791576001925050506117aa565b8061179b81612294565b91505061174b565b5060009150505b92915050565b6000807fb117e7df7afc3d596b66d8aed8b3987c92d6781a819d58bfe89281bd26f969c7836000015184602001518560400151604051602001611815949392919093845260208401929092526001600160a01b03166040830152606082015260800190565b60405160208183030381529060405280519060200120905060006118388261193f565b9050600061185385606001518361196c90919063ffffffff16565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b0316149350505050919050565b606060ff83146118ae576118a783611996565b90506117aa565b8180546118ba9061224a565b80601f01602080910402602001604051908101604052809291908181526020018280546118e69061224a565b80156119335780601f1061190857610100808354040283529160200191611933565b820191906000526020600020905b81548152906001019060200180831161191657829003601f168201915b505050505090506117aa565b60006117aa61194c6119d5565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060008061197c8686611b00565b92509250925061198c8282611b4d565b5090949350505050565b606060006119a383611c06565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015611a2e57507f000000000000000000000000000000000000000000000000000000000000000046145b15611a5857507f000000000000000000000000000000000000000000000000000000000000000090565b6109f5604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60008060008351604103611b3a5760208401516040850151606086015160001a611b2c88828585611c2e565b955095509550505050611b46565b50508151600091506002905b9250925092565b6000826003811115611b6157611b6161248a565b03611b6a575050565b6001826003811115611b7e57611b7e61248a565b03611b9c5760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115611bb057611bb061248a565b03611bd15760405163fce698f760e01b8152600481018290526024016103e0565b6003826003811115611be557611be561248a565b03611218576040516335e2f38360e21b8152600481018290526024016103e0565b600060ff8216601f8111156117aa57604051632cd44ac360e21b815260040160405180910390fd5b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611c695750600091506003905082611cf3565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611cbd573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611ce957506000925060019150829050611cf3565b9250600091508190505b9450945094915050565b828054828255906000526020600020908101928215611d52579160200282015b82811115611d5257825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611d1d565b50611d5e929150611d62565b5090565b5b80821115611d5e5760008155600101611d63565b80356001600160a01b0381168114611d8e57600080fd5b919050565b60008060408385031215611da657600080fd5b611daf83611d77565b946020939093013593505050565b600060208284031215611dcf57600080fd5b5035919050565b6000815180845260005b81811015611dfc57602081850181015186830182015201611de0565b506000602082860101526020601f19601f83011685010191505092915050565b60006101208b8352806020840152611e368184018c611dd6565b604084019a909a5250506060810196909652608086019490945260a08501929092526001600160a01b031660c0840152151560e083015215156101009091015292915050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715611eb557611eb5611e7c565b60405290565b600067ffffffffffffffff80841115611ed657611ed6611e7c565b604051601f8501601f19908116603f01168101908282118183101715611efe57611efe611e7c565b81604052809350858152868686011115611f1757600080fd5b858560208301376000602087830101525050509392505050565b60008060008060808587031215611f4757600080fd5b843567ffffffffffffffff811115611f5e57600080fd5b8501601f81018713611f6f57600080fd5b611f7e87823560208401611ebb565b97602087013597506040870135966060013595509350505050565b600060208284031215611fab57600080fd5b611fb482611d77565b9392505050565b600081518084526020808501945080840160005b83811015611feb57815187529582019590820190600101611fcf565b509495945050505050565b602081526000611fb46020830184611fbb565b60ff60f81b8816815260e06020820152600061202860e0830189611dd6565b828103604084015261203a8189611dd6565b606084018890526001600160a01b038716608085015260a0840186905283810360c0850152905061206b8185611fbb565b9a9950505050505050505050565b600081518084526020808501945080840160005b83811015611feb5781516001600160a01b03168752958201959082019060010161208d565b6020815281516020820152600060208301516101408060408501526120db610160850183611dd6565b91506040850151606085015260608501516080850152608085015160a085015260a085015160c085015260c0850151601f198584030160e08601526121208382612079565b92505060e085015161010061213f818701836001600160a01b03169052565b86015190506101206121548682018315159052565b90950151151593019290925250919050565b60006020828403121561217857600080fd5b813567ffffffffffffffff8082111561219057600080fd5b90830190608082860312156121a457600080fd5b6121ac611e92565b823581526121bc60208401611d77565b6020820152604083013560408201526060830135828111156121dd57600080fd5b80840193505085601f8401126121f257600080fd5b61220186843560208601611ebb565b606082015295945050505050565b60006020828403121561222157600080fd5b5051919050565b60006020828403121561223a57600080fd5b81518015158114611fb457600080fd5b600181811c9082168061225e57607f821691505b602082108103610cd157634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016122a6576122a661227e565b5060010190565b808201808211156117aa576117aa61227e565b601f82111561230a57600081815260208120601f850160051c810160208610156122e75750805b601f850160051c820191505b81811015612306578281556001016122f3565b5050505b505050565b815167ffffffffffffffff81111561232957612329611e7c565b61233d81612337845461224a565b846122c0565b602080601f831160018114612372576000841561235a5750858301515b600019600386901b1c1916600185901b178555612306565b600085815260208120601f198616915b828110156123a157888601518255948401946001909101908401612382565b50858210156123bf5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6040815260006123e26040830185611dd6565b90508260208301529392505050565b6020808252601d908201527f446562617465506f6f6c3a20496e76616c696420646562617465204944000000604082015260600190565b818103818111156117aa576117aa61227e565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176117aa576117aa61227e565b60008261248557634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220bea617d77f5190c4338e18d636e5fa6a123419ea2e385b724c02d80bb853ae8564736f6c63430008140033";
const isSuperArgs = (xs) => xs.length > 1;
class DebatePool__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(_usdcToken, _oracle, overrides) {
        return super.getDeployTransaction(_usdcToken, _oracle, overrides || {});
    }
    deploy(_usdcToken, _oracle, overrides) {
        return super.deploy(_usdcToken, _oracle, overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.DebatePool__factory = DebatePool__factory;
DebatePool__factory.bytecode = _bytecode;
DebatePool__factory.abi = _abi;
